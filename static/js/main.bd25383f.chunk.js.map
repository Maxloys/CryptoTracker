{"version":3,"sources":["services/cryptoAPI.js","components/TopComponent.jsx","components/MiddleSection.jsx","images/logo.png","components/Navbar.jsx","components/ItemsList.jsx","services/cryptoNewsApi.js","images/unknown.jpg","components/News.jsx","components/CryptoDetails.jsx","components/Accordion.jsx","components/Loading.jsx","components/LoadButton.jsx","images/homeimage.png","components/Home.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","counter","getCryptosDetails","coinId","getHistory","days","useGetCryptosQuery","useGetCryptosDetailsQuery","useGetHistoryQuery","useGetExchangesQuery","TopComponent","data","isFetching","globalStats","stats","className","millify","total","totalMarkets","totalMarketCap","total24hVolume","totalExchanges","MiddleSection","useState","simplified","setSimplified","exact","path","to","Navbar","burger","setBurger","clicked","setClicked","showBurger","window","innerWidth","forEach","event","addEventListener","document","removeEventListener","domNode","handler","useRef","useEffect","outsideHandler","e","current","contains","target","useClickOutside","onClick","ref","src","icon","alt","activeClassName","style","marginRight","ItemsList","search","setSearch","cryptos","setCryptos","filteredData","coins","filter","coin","name","toLowerCase","includes","type","placeholder","onChange","value","map","currency","id","uuid","textDecoration","iconUrl","rank","price","display","justifyContent","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","count","useGetCryptoNewsQuery","News","fetchedData","setNewsCategory","cryptoNews","setCryptoNews","cryptoNewsToShow","setCryptoNewsToShow","selectList","i","length","push","preventDefault","news","href","width","height","image","thumbnail","contentUrl","uknown","substring","description","provider","marginLeft","moment","datePublished","fromNow","array","setArray","dataAmount","itemsPerPage","CryptoDetails","useParams","setDays","coinPrice","coinTimeStamp","coinHistory","cryptoData","history","item","Date","timestamp","toLocaleDateString","chartData","labels","datasets","label","fill","backgroundColor","borderColor","parseInt","padding","marketCap","numberOfMarkets","numberOfExchanges","HTMLReactParser","day","Accordion","Loading","arrayForHolding","LoadButton","next","setNext","loopWithSlice","start","end","slicedItems","slice","Home","App","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.bd25383f.chunk.js","sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'e11f65d2bdmsh97ef15c54a3d19fp179f77jsn678f9d965bf6'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders})\r\n\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({                \r\n            query: (counter) => createRequest(`/coins?limit=${counter}`),\r\n        }),\r\n        getCryptosDetails : builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getHistory: builder.query({\r\n            query: ({coinId, days}) => \r\n            createRequest(`/coin/${coinId}/history?timePeriod=${days}`),\r\n            \r\n        }),\r\n    })\r\n})\r\n\r\nexport const {useGetCryptosQuery, useGetCryptosDetailsQuery, useGetExchangesQuery, useGetHistoryQuery} = cryptoApi;","import React from 'react'\r\nimport { useGetCryptosQuery } from '../services/cryptoAPI'\r\nimport millify from 'millify'\r\nimport './TopComponent.css'\r\nimport { Loading } from '.'\r\nconst TopComponent = () => {\r\n    const {data, isFetching} = useGetCryptosQuery(12)\r\n    const globalStats = data?.data?.stats\r\n    if(isFetching) return <Loading/>\r\n        return (\r\n            <div className = \"top-content\">\r\n                <div className=\"left-items\">\r\n                    <p className=\"top-parag\">Cryptocurrencies: <span>{millify(globalStats.total)}</span></p>\r\n                    <p className=\"top-parag\">Markets: <span>{millify(globalStats.totalMarkets)}</span></p>\r\n                </div>    \r\n                <div className=\"middle-items\">\r\n                    <p className=\"top-parag\">Market cap: <span>{millify(globalStats.totalMarketCap)}</span></p>\r\n                    <p className=\"top-parag\">Volume 24H: <span>{millify(globalStats.total24hVolume)} $</span></p>\r\n                </div>   \r\n                <div className=\"right-items\">\r\n                    <p className=\"top-parag\">Exchanges: <span>{millify(globalStats.totalExchanges)}</span></p>\r\n                </div>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TopComponent \r\n","import React,{useState} from 'react'\r\nimport { CryptoDetails, ItemsList, News, Home } from '.'\r\nimport {Route, Switch, Redirect} from 'react-router'\r\nimport './MiddleSection.css'\r\nconst MiddleSection = () => {\r\nconst [simplified, setSimplified] = useState(true);\r\n\r\n    return (\r\n        <div className=\"middle-content\">\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Redirect to=\"/home\" />\r\n                </Route>\r\n            </Switch>\r\n            <Switch>\r\n                <Route exact path='/home'><Home/></Route>\r\n            </Switch>\r\n\r\n            <Switch>\r\n                <Route exact path ='/cryptocurrencies'><ItemsList simplified={simplified} setSimplified={setSimplified} /></Route>\r\n            </Switch>\r\n            <Switch>\r\n                <Route exact path ='/news'><News simplified={simplified} setSimplified ={setSimplified}/></Route>\r\n            </Switch>\r\n            <Switch>\r\n                <Route exact path ='/crypto/:coinId'><CryptoDetails/></Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiddleSection\r\n","export default __webpack_public_path__ + \"static/media/logo.3aeb8e25.png\";","import React, {useState, useRef, useEffect} from 'react'\r\nimport { FaHome, FaMoneyCheck, FaExchangeAlt, FaLightbulb } from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.css'\r\nimport icon from '../images/logo.png'\r\nimport {GiHamburgerMenu} from \"react-icons/gi\"\r\nimport {FaTimes} from \"react-icons/fa\"\r\n\r\nconst Navbar = () => {\r\n    const [burger, setBurger] = useState(false)\r\n    const [clicked, setClicked] = useState(false)\r\n\r\n    /*Custom hook to handle click outside*/\r\n    const useClickOutside = (handler) => {\r\n        let domNode = useRef()\r\n        useEffect(()=> {    \r\n            let outsideHandler = (e) => {\r\n                if(!domNode.current.contains(e.target)){\r\n                    handler()\r\n                }\r\n            }\r\n            document.addEventListener(\"mousedown\", outsideHandler)\r\n\r\n            return () => {\r\n                document.removeEventListener(\"mousedown\", outsideHandler)\r\n            }\r\n        })\r\n        return domNode\r\n    }\r\n\r\n\r\n    const showBurger = () => {\r\n        if(window.innerWidth <= 1180){\r\n            setBurger(true)\r\n        }\r\n        else{\r\n        setBurger(false)\r\n    }\r\n    }\r\n\r\n    ['resize','load'].forEach(event => {\r\n        window.addEventListener(event, showBurger, false)\r\n        document.removeEventListener(event, showBurger, false)\r\n    });\r\n\r\n    let domNode = useClickOutside(() => setClicked(false))\r\n\r\n    return (\r\n        <>\r\n            {burger && <GiHamburgerMenu className='navbar-hamburger' onClick={() => setClicked(!clicked)}/>}\r\n            {<div ref={domNode} className={ clicked? 'navbar__content__active' :'navbar-content'} >\r\n                {burger && <div className='close-button-flex'><FaTimes className='close-button' onClick={() => setClicked(!clicked)}/> </div>}\r\n                <div className=\"logo-box\">\r\n                    <img className=\"logo\" src={icon} alt=\"logo\" />\r\n                    <h1 className=\"logo-header\">cryptoangle</h1>\r\n                </div>\r\n                <div className=\"navbar-links\" >\r\n                    <NavLink to =\"/home\" exact={true} className='navbar-link' activeClassName = 'navbar-active'  > <FaHome style={{marginRight:\"12px\"}}/>Home</NavLink>\r\n                    <NavLink to =\"/cryptocurrencies\" className=\"navbar-link\" activeClassName = 'navbar-active'><FaMoneyCheck style={{marginRight:\"12px\"}}/> Cryptocurrencies</NavLink>\r\n                    <NavLink to =\"/news\" className=\"navbar-link\" activeClassName = 'navbar-active'><FaLightbulb style={{marginRight:\"12px\"}}/> News</NavLink>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState, useEffect} from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport {useGetCryptosQuery} from '../services/cryptoAPI'    \r\nimport './ItemsList.css'\r\nimport { Loading } from '.' \r\n\r\nconst ItemsList = ({simplified, setSimplified}) => {\r\n\r\n    const [search, setSearch] = useState('')\r\n    const {data, isFetching } = useGetCryptosQuery(simplified ? 12 : 100)\r\n    const [cryptos, setCryptos] = useState([])\r\n    \r\n    useEffect(() => {\r\n        const filteredData = data?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(search.toLowerCase()));\r\n        setCryptos(filteredData) \r\n    },[data,search])\r\n   \r\n    useEffect(() => {\r\n        setSimplified(true) \r\n    }, [setSimplified])\r\n\r\n    if(isFetching) return <Loading/>\r\n\r\n    return (\r\n       <>\r\n            <div className='items-main'>\r\n                {!simplified? <div className='search-header'>\r\n                <input type=\"text\" placeholder='Search...' className=\"items-search\" onChange={(e) => setSearch(e.target.value)}/>\r\n                </div> : ''}\r\n                {(simplified && !search)? <h1>Top 10 cryptos in the world </h1> : ''}\r\n        \r\n                <div className=\"items-container\" >\r\n                    {cryptos?.map((currency, id) =>(\r\n                        <div className=\"items\" key={id}>\r\n                            <Link to ={`/crypto/${currency.uuid}`} style={{textDecoration: \"none\"}}>\r\n                                <div className=\"item-heading\">\r\n                                    <img src={currency.iconUrl} alt={currency.name} className=\"item-image\" /> \r\n                                    <div  className=\"item-text\">{`${currency.rank}. ${currency.name} `}</div>\r\n                                </div>\r\n                                <p>Price: {millify(currency.price)}$</p>\r\n                                {/*\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                            <p>Daily Changes: {millify(currency.change)}%</p> */}\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {(simplified)? \r\n                    <div style={{display:'flex', justifyContent:'center'}}>\r\n                <Link to=\"/cryptocurrencies\" className='view-button' onClick={()=> setSimplified(!simplified)}>View More</Link></div> : \"\"}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemsList\r\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsApiHeaders = {\r\n        'x-bingapis-sdk': 'true',\r\n        'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n        'x-rapidapi-key': 'e11f65d2bdmsh97ef15c54a3d19fp179f77jsn678f9d965bf6'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsApiHeaders})\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({                 \r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n})\r\n\r\nexport const {useGetCryptoNewsQuery} = cryptoNewsApi;","export default __webpack_public_path__ + \"static/media/unknown.04fda6e9.jpg\";","import React, {useState, useEffect} from 'react'\r\nimport { useGetCryptosQuery } from '../services/cryptoAPI'\r\nimport {useGetCryptoNewsQuery} from '../services/cryptoNewsApi'\r\nimport moment from 'moment'\r\nimport './News.css'\r\nimport { Loading, LoadButton } from '.'\r\nimport uknown from '../images/unknown.jpg' \r\n\r\nconst itemsPerPage = 10\r\nconst dataAmount = 100\r\n\r\nconst News = ({simplified, setSimplified}) => {\r\n    const {data :fetchedData} = useGetCryptosQuery(100)\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const {data, isFetching } = useGetCryptoNewsQuery({newsCategory , count : dataAmount })\r\n    const [cryptoNews, setCryptoNews] = useState([])\r\n    const [cryptoNewsToShow, setCryptoNewsToShow] = useState([])\r\n    const selectList = ['Cryptocurrency']\r\n\r\n    for (let i=0; i< fetchedData?.data?.coins.length; i+=1){\r\n        selectList.push(fetchedData?.data?.coins[i].name)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCryptoNews([])\r\n    },[newsCategory])\r\n\r\n    useEffect(() => {\r\n        if(isFetching) return <Loading/>\r\n        setCryptoNews(data?.value)\r\n    }, [cryptoNews, data, isFetching])\r\n   \r\n    if(isFetching) return <Loading/>\r\n  \r\n    \r\n    return (\r\n        <>\r\n            <div className='news-main'>\r\n                {(simplified)? <h1 >Cryptos News </h1> : ''}    \r\n                <select value={newsCategory} className='news-select' onChange={(e) => {\r\n                    e.preventDefault()\r\n                    setSimplified(false)\r\n                    setNewsCategory(e.target.value)}}>\r\n                    {selectList.map((coin, id) =>  <option value={coin} key={id}>{coin}</option>)}\r\n                </select>\r\n       \r\n                {cryptoNews.length !== 0? \r\n                <div className=\"news-container\"> \r\n                {cryptoNewsToShow.map((news, i) =>(\r\n                    <div className=\"news-item\" key={i}>\r\n                        <a  href={news?.url} style={{display:'block', width:'100%', height:'100%', textDecoration:'none'}}>\r\n                            <div className='news-flex'>\r\n                                <div className='news-photo'>\r\n                                    {/*<h1 className=\"news-heading\">{news.name}</h1>*/}\r\n                                        <img src={(news?.image?.thumbnail?.contentUrl)? news?.image?.thumbnail?.contentUrl : uknown}  className='news-image' alt=\"img\" />\r\n                                </div>\r\n                                <div className='news-footer'>\r\n                                    <h2 className=\"news-heading\">{(news.name.length>50)? news.name.substring(0,50)+'...': news.name} </h2>\r\n                                    <p className=\"news-article\">           \r\n                                    {(news.description.length> 80)? news.description.substring(0,80)+'...' : news.description}\r\n                                    </p>\r\n                                    <div className=\"news-postdate\">\r\n                                        <p> by {news.provider[0].name} <span style={{marginLeft:'10px'}}><span className='news-datespan'>• {moment(news.datePublished).fromNow()}</span></span></p>\r\n                                    </div>\r\n                                    {/*<div className=\"news-footer\">\r\n                                        <img src={news.provider[0].image?.thumbnail?.contentUrl} style={{width: \"30px\", height: \"30px\"}} alt='blank' />\r\n                                        <p className=\"news-postdate\">{moment(news.datePublished).fromNow()}</p>\r\n                                    </div>*/}\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                ))}\r\n                </div> \r\n                : <h1>No Data</h1> }\r\n                <LoadButton array = {cryptoNews} setArray={setCryptoNewsToShow} dataAmount = {dataAmount} itemsPerPage={itemsPerPage} newsCategory = {newsCategory}  />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React, {useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useGetCryptosDetailsQuery, useGetHistoryQuery } from '../services/cryptoAPI'\r\nimport { Line } from 'react-chartjs-2'\r\nimport './CryptoDetails.css'\r\nimport { Loading } from '.'\r\n\r\nconst CryptoDetails = () => {\r\nconst {coinId} = useParams()\r\nconst [days, setDays] = useState('24h')\r\nconst coinPrice = []\r\nconst coinTimeStamp = []\r\nconst {data, isFetching} = useGetCryptosDetailsQuery(coinId)\r\nconst { data: coinHistory } = useGetHistoryQuery({coinId, days})\r\nif (isFetching) return <Loading/> \r\n\r\nconst cryptoData = data?.data?.coin\r\nconst history = coinHistory\r\n\r\nfor (let item in history?.data?.history){\r\n    coinPrice.push(history?.data?.history[item].price)\r\n    coinTimeStamp.push(new Date(history?.data?.history[item].timestamp * 1000).toLocaleDateString())\r\n}\r\n\r\nconst chartData = {\r\n    labels: coinTimeStamp,\r\n    datasets: [\r\n        {\r\n            label: \"USD\",\r\n            data : coinPrice,\r\n            fill: false,\r\n            backgroundColor: '#28bdfb',\r\n            borderColor: '#4664fb',\r\n        }\r\n    ]\r\n}\r\n\r\nconst selectOptions = ['24h', '7d', '30d', '1y', '5y']\r\n\r\n    return (\r\n        <>\r\n            <div className='details-main'>\r\n                <div className=\"details-header\">\r\n                    <h1>{cryptoData?.name}</h1>\r\n                    <img src={cryptoData?.iconUrl} className='details-image' alt={cryptoData?.name}  />\r\n                </div>\r\n                <div className=\"stats\">\r\n                    <div className=\"left-stats\">\r\n                        <h1>Value Statistics</h1>\r\n                        <p>\r\n                            Price: <span>{millify(parseInt(cryptoData?.price))} $</span>\r\n                        </p>\r\n                         <p>\r\n                            Rank: <span style={{padding:'5px 12px 5px 12px'}}>{cryptoData?.rank}</span>\r\n                        </p>\r\n                        <p>\r\n                            24H Volume: <span>{millify(cryptoData?.['24hVolume'])} $</span>\r\n                        </p>\r\n                        <p>\r\n                            Market Cap: <span>{millify(cryptoData?.marketCap)} $</span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"right-stats\">\r\n                        <h1>Other Statistics</h1>\r\n                        <p>\r\n                            Number Of Markets : <span>{cryptoData?.numberOfMarkets}</span>\r\n                        </p>\r\n                        <p>\r\n                            Number Of Exchanges: <span>{cryptoData?.numberOfExchanges}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"details-info\">\r\n                    <h1>What is {cryptoData?.name}</h1>\r\n                    <div>{HTMLReactParser(cryptoData?.description)}</div>\r\n                </div>\r\n                <select className = 'details-select' onChange={(e) => {\r\n                    e.preventDefault()\r\n                    setDays(e.target.value)\r\n                    }}>\r\n                    {selectOptions.map((day, id) =>  <option value={day} key={id}>{day}</option>)}\r\n                </select>\r\n        \r\n                <Line data ={chartData} />\r\n       \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import React, { useState, useRef } from \"react\"\r\nimport {FaChevronRight} from \"react-icons/fa\"\r\nimport './Accordion.css'\r\n\r\nfunction Accordion(props) {\r\n\r\n  const [Active, setActive] = useState(\"\")\r\n  const [Height, setHeight] = useState(\"0px\")\r\n  const [Rotate, setRotate] = useState(\"accordion__icon\")\r\n\r\n  const content = useRef(null)\r\n\r\n  function toggleAccordion() {\r\n    setActive(Active === \"\" ? \"active\" : \"\");\r\n    setHeight(\r\n      Active === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\r\n    )\r\n    setRotate(\r\n      Active === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"accordion__section\" style={{marginBottom:'10px'}}>\r\n      <button className={`accordion ${Active}`} onClick={toggleAccordion}>\r\n        <img src={props.iconUrl} className='accordion__image' alt='icon' />\r\n        <p className=\"accordion__title\">{props.title}</p>\r\n        <FaChevronRight className={`${Rotate}`} width={10} />\r\n      </button>\r\n      <div\r\n        ref={content}\r\n        style={{ maxHeight: `${Height}` }}\r\n        className=\"accordion__content\"\r\n      >\r\n      <div\r\n        className=\"accordion__text\"\r\n        dangerouslySetInnerHTML={{ __html: props.content }}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordion;\r\n","import React from 'react'\r\nimport './Loading.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n    <>\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, {useState, useEffect} from 'react'\r\nimport './LoadButton.css'\r\n\r\n\r\nlet arrayForHolding = []\r\nconst LoadButton = ({array, setArray, dataAmount, itemsPerPage, newsCategory}) => {\r\n    const [next, setNext] = useState(10)\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n        arrayForHolding = []\r\n        setNext(10)\r\n    },[newsCategory])\r\n\r\n    useEffect(() => {\r\n        loopWithSlice(0, itemsPerPage);\r\n      },[array]);\r\n\r\n\r\n    const loopWithSlice = (start, end) => {\r\n        const slicedItems = array.slice(start, end)\r\n        arrayForHolding = [...arrayForHolding, ...slicedItems]  \r\n        setArray(arrayForHolding)\r\n    }\r\n\r\n    const handleShowMoreItems = () => {\r\n        loopWithSlice(next, next + itemsPerPage)\r\n        setNext(next + itemsPerPage)\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            {(next === dataAmount || array.length <= next)? '' : \r\n                <div className='button-container'>\r\n                    <button className='button' onClick={handleShowMoreItems}>Load More ↓</button>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoadButton\r\n","export default __webpack_public_path__ + \"static/media/homeimage.e012a136.png\";","import React from 'react'\r\nimport './Home.css'\r\nimport image from '../images/homeimage.png'\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <div className='home-flex'>\r\n                <div className='left-content'>\r\n                    <div className='info-flex'>\r\n                        <h1 className='info-header'>\r\n                            Crypto Tracker Cryptoangle\r\n                        </h1>\r\n                        <p className='info-text'>\r\n                            <span>Cryptoangle</span> is a type of app that shows real-time information on cryptocurrency prices,\r\n                            exchanges platforms, news and more.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='right-content'>\r\n                    <div className='image-container'>\r\n                        <img src={image} className='image' alt=\"\" />\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\n\nimport {MiddleSection, Navbar, TopComponent} from './components'\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <TopComponent/>\n        <div style={{display:'flex'}}>\n          <Navbar/>\n          <MiddleSection/>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoAPI\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware().concat(cryptoApi.middleware, cryptoNewsApi.middleware),\r\n    },\r\n   \r\n    )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './app/store'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}